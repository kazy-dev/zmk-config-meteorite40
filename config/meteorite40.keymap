#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred"; // change hold to tap
    tapping-term-ms = <200>;
    quick-tap-ms = <150>; // change 200 to 150
};

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <150>; // change 200 to 150
    quick-tap-ms = <150>; // change 200 to 150
};

/ {
    combos {
        compatible = "zmk,combos";

        layer2 {
            bindings = <&mo 2>;
            key-positions = <12 13>; /* D + F */
            layers = <0>;
        };

        lang2 {
            bindings = <&kp LANG2>;
            key-positions = <16 17>; /* J + K */
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <20 21>; /* Z + X */
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>; /* Q + W */
            layers = <0>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <16 17>; /* J + K (on layer 2) */
            layers = <2>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <18 19>; /* L + - (on layer 2) */
            layers = <2>;
        };

        ctrl_home {
            bindings = <&kp LC(HOME)>;
            key-positions = <16 18>; /* J + L (on layer 2) */
            layers = <2>;
        };

        ctrl_end {
            bindings = <&kp LC(END)>;
            key-positions = <17 19>; /* K + - (on layer 2) */
            layers = <2>;
        };

        screenshot4 {
            bindings = <&kp LS(LG(NUMBER_4))>;
            key-positions = <25 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        layout = &LAYOUT_2U_SPACE;

        win_default_layer {
            display-name = "BASE";
            bindings = <
&kp Q             &kp W             &kp E             &kp R             &kp T           &kp Y          &kp U            &kp I       &kp O  &kp P
&kp A             &kp S             &kp D             &kp F             &kp G           &kp H          &kp J            &kp K       &kp L  &kp ENTER
&mt LEFT_SHIFT Z  &kp X             &kp C             &kp V             &kp B           &kp LS(LG(H))  &kp LS(LG(J))    &kp N       &kp M  &kp COMMA  &kp DOT  &lt 4 SLASH
&kp LEFT_ALT      &kp LEFT_COMMAND  &lt 1 LANGUAGE_1  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &lt 2 SPACE    &lt 3 BACKSPACE  &kp ESCAPE
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>,
                // RE0: ctrl + - / +,,,,,,,,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            // RE1: volume down/up
        };

        layer_1 {
            display-name = "SYMBOLS";
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4   &kp N5    &kp NUMBER_6  &kp N7     &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp CARET       &kp LC(LEFT)  &kp LC(UP_ARROW)  &kp LC(RIGHT)  &kp PIPE  &none         &kp LC(J)  &kp LC(K)     &kp LC(L)     &kp SEMICOLON
&kp LEFT_SHIFT  &mkp MB4      &mkp MB3          &mkp MB1       &mkp MB2  &trans        &trans     &none         &none         &none          &none  &kp COMMA
&trans          &trans        &trans            &trans         &trans    &trans        &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>,
                // RE0: ctrl + - / +,,,,,,,,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            // RE1: volume down/up
        };

        layer_2 {
            display-name = "NUM / ARROW";
            bindings = <
&kp EXCLAMATION   &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_CONTROL  &kp F5       &kp F6    &kp F7      &kp F8       &kp MINUS  &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&kp LEFT_SHIFT    &kp F9       &kp F10   &kp F11     &kp F12      &none      &none          &kp LS(MINUS)     &kp LS(EQUAL)         &kp LS(LEFT_BRACKET)   &kp LS(RIGHT_BRACKET)  &kp SLASH
&trans            &trans       &trans    &trans      &trans       &trans     &trans         &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>,
                // RE0: ctrl + - / +,,,,,,,,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            // RE1: volume down/up
        };

        layer_3 {
            display-name = "FUNCTION";
            bindings = <
&kp TAB           &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP       &none   &none   &none     &kp UP_ARROW    &kp RIGHT_ARROW  &none
&kp LEFT_CONTROL  &none       &none              &kp LS(LG(NUMBER_6))  &none   &none   &kp LEFT  &kp DOWN_ARROW  &none            &none
&kp LEFT_SHIFT    &none       &none              &kp LS(LG(NUMBER_4))  &none   &none   &none     &none           &kp F1           &kp F2  &kp F3  &kp F4
&trans            &trans      &trans             &trans                &trans  &trans  &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>,
                // RE0: ctrl + - / +,,,,,,,,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            // RE1: volume down/up
        };

        layer_4 {
            display-name = "SETTING";
            bindings = <
&bootloader  &none   &none   &none   &none   &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none        &none   &none   &none   &none   &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none
&none        &none   &none   &none   &none   &none         &none           &none         &none         &none         &none  &none
&trans       &trans  &trans  &trans  &trans  &trans        &trans          &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>,
                // RE0: ctrl + - / +,,,,,,,,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;

            // RE1: volume down/up
        };
    };
};
